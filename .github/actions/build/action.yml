name: build

runs:
  using: composite

  steps:
    - name: get poetry version
      id: poetry-version
      run: |
        if command -v poetry >/dev/null 2>&1; then
          echo "::set-output name=version::$(poetry --version)"
        else
          echo "::set-output name=version::none"
        fi
      shell: bash

    - name: load cached poetry installation
      id: cached-poetry
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}-${{ steps.poetry-version.outputs.version }}

    - name: install poetry
      if: steps.cached-poetry.outputs.cache-hit != 'true'
      run: curl -sSL https://install.python-poetry.org | python3 -
      shell: bash

    - name: install python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        cache: 'poetry'
        python-version-file: 'pyproject.toml'

    - name: install deps
      run: poetry install --no-interaction --no-root
      shell: bash

    - name: restore default environment
      run: cp src/core/.env.ci src/core/.env
      shell: bash
