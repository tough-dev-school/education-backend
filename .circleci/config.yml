version: 2.1

defaults: &defaults
  docker:
    - image: cimg/python:3.8.9
      environment:
        - DATABASE_URL=postgres://postgres:password@postgres:5432/circle_test
        - REDIS_URL=redis://redis:6379

    - image: circleci/redis:6.0-alpine
      name: redis

    - image: circleci/postgres:13.2-ram
      name: postgres
      environment:
        - POSTGRES_PASSWORD=password

jobs:
  build:
    <<: *defaults

    steps:
      - checkout
      - restore_cache:
          key: deps-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.txt" }}

      - run:
          command: sudo apt update && sudo apt --no-install-recommends install -y locales-all

      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip pip-tools wheel
            pip-sync requirements.txt dev-requirements.txt

      - save_cache:
          key: deps-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.txt" }}
          paths:
            - "venv"

      - run:
          command: mv src/app/.env.ci src/app/.env

      - run:
          name: Run linters
          command: |
            . venv/bin/activate
            make lint

      - run:
          name: Check for forgotten migrations
          command: |
            . venv/bin/activate
            make checkmigrations

      - persist_to_workspace:
          root: .
          paths:
            - ".git"
            - "src"
            - "venv"
            - ".circleci"
            - "Makefile"

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Install locale stuff
          command: sudo apt update && sudo apt --no-install-recommends install -y locales-all

      - run:
          name: Install Codeclimate helper
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            make coverage

      - run:
          name: Upload test coverage to codeclimate
          command: |
            cd src && ../cc-test-reporter after-build -t coverage.py

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - build
      - test:
          requires:
            - build
