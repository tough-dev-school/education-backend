# Generated by Django 4.2.23 on 2025-07-25 15:29

from django.db import migrations, models


def parse_course_name(name: str) -> tuple[str, str]:
    """Parse course name into product_name and tariff_name.

    Examples:
        "Без ерунды(самостоятельно)" -> ("Без ерунды", "самостоятельно")
        "Simple Name" -> ("Simple Name", "")

    """
    if "(" not in name or ")" not in name:
        return name.strip(), ""

    opening_paren_index = name.find("(")
    closing_paren_index = name.find(")")

    # Handle malformed parentheses (e.g., ")(" or multiple parentheses)
    if opening_paren_index >= closing_paren_index:
        return name.strip(), ""

    product_name = name[:opening_paren_index].strip()
    tariff_name = name[opening_paren_index + 1 : closing_paren_index].strip()

    return product_name, tariff_name


def split_names(apps, schema_editor) -> None:  # NOQA: ARG001
    Course = apps.get_model("products.Course")

    for course in Course.objects.iterator():
        product_name, tariff_name = parse_course_name(course.name)

        course.product_name = product_name
        course.tariff_name = tariff_name if tariff_name else None
        course.save()


class Migration(migrations.Migration):
    dependencies = [
        ("products", "0038_remove_legacy_model_fields"),
    ]

    operations = [
        migrations.AddField(
            model_name="course",
            name="product_name",
            field=models.CharField(blank=True, null=True, max_length=255, verbose_name="Name"),
        ),
        migrations.AddField(
            model_name="course",
            name="tariff_name",
            field=models.CharField(blank=True, max_length=64, null=True, verbose_name="Tariff name"),
        ),
        migrations.RunPython(split_names, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="course",
            name="product_name",
            field=models.CharField(null=False, blank=False, max_length=255, verbose_name="Name"),
        ),
        migrations.RemoveField(
            model_name="course",
            name="name",
        ),
    ]
