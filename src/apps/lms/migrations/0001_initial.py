# Generated by Django 4.2.20 on 2025-03-22 10:54
from typing import no_type_check

import django.db.models.deletion
from django.db import migrations, models

import core.models


@no_type_check
def create_lesson_for_each_course_with_materials(apps, schema_editor) -> None:  # noqa: ARG001
    Material = apps.get_model("notion.Material")
    Lesson = apps.get_model("lms.Lesson")
    Course = apps.get_model("products.Course")

    for course in Course.objects.all().iterator():
        if not course.material_set.count():
            continue

        home_page = Material.objects.filter(course=course, is_home_page=True).first()

        if not home_page:
            continue

        Lesson.objects.create(
            name="Материалы курса",
            course=course,
            hidden=False,
            material=home_page,
        )


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("notion", "0014_page_links"),
        ("products", "0033_ProductGroupDashamail"),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[],
            options={
                "ordering": ["-created"],
                "proxy": True,
                "indexes": [],
                "constraints": [],
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
            bases=("products.course",),
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified", models.DateTimeField(blank=True, db_index=True, null=True)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("position", models.PositiveIntegerField(db_index=True, default=0)),
                ("hidden", models.BooleanField(default=True, help_text="Users can't find such materials in the listing", verbose_name="Hidden")),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="lessons", to="lms.Course")),
                (
                    "material",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name="+", to="notion.material", verbose_name="Material"
                    ),
                ),
            ],
            options={
                "ordering": ["position"],
                "verbose_name": "Lesson",
                "verbose_name_plural": "Lessons",
            },
            bases=(core.models.TestUtilsMixin, models.Model),
        ),
        migrations.RunPython(create_lesson_for_each_course_with_materials),
    ]
